import numpy as np
from sklearn.cross_validation import train_test_split
from sklearn import tree

#delete strings with missing values in genfromtxt
data = np.genfromtxt('2008_100_200.csv', delimiter=";", skip_header=1)
print(data.shape)

#removing nan
data = data[~np.isnan(data).any(axis=1)]
#or this way
#data = data[np.all(np.isfinite(data), axis=1)]

#check for deletions
#print(data.shape)

#check if nan detected
#print(np.isnan(X).any())

#create model
clf = tree.DecisionTreeClassifier(random_state=0)
data_train, data_test = train_test_split(data, test_size=0.5, random_state=0)

target = [x[16] for x in data_train]
train = data_train[:, 0:16]
fitted_tree = clf.fit(train, target)
test = data_test[:, 0:16]

predicted_probs = clf.predict_proba(test)
predicted_probs = predicted_probs.astype(int)
print(predicted_probs)
#saving the result of classifying to csv
np.savetxt('filepath.csv', predicted_probs, delimiter=',', header='Id,PredictedProbability', comments='')

